{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","type","placeholder","placeholderValue","onChange","e","handleOnChangle","target","value","App","setState","searchField","state","fetch","then","response","json","users","this","filterMonster","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAEaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACxB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCJXC,EAAW,SAACR,GAEvB,OADAS,QAAQC,IAAIV,GAEV,qBAAKC,UAAU,YAAf,SACGD,EAAMW,SAASC,KAAI,SAACR,GAAD,OAClB,cAAC,EAAD,CAAMA,QAASA,UCPVS,G,MAAY,SAACb,GACxB,OACE,qBAAKC,UAAU,SAAf,SACE,uBACEa,KAAK,SACLC,YAAaf,EAAMgB,iBACnBC,SAAU,SAACC,GACPlB,EAAMmB,gBAAgBD,EAAEE,OAAOC,cCuC5BC,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAcFH,gBAAkB,SAACE,GACjB,EAAKE,SAAS,CAAEC,YAAaH,KAd7B,EAAKI,MAAQ,CACXd,SAAU,GACVa,YAAa,IAJH,E,qDAUd,WAAqB,IAAD,OAClBE,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKP,SAAS,CAAEZ,SAAUmB,S,oBAK/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUa,EADX,EACWA,YACZQ,EAAgBrB,EAASsB,QAAO,SAAC7B,GACrC,OAAOA,EAAQE,KACZ4B,cACAC,SAASX,EAAYY,wBAE1B,OACE,sBAAKnC,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,6BAGE,cAAC,EAAD,CACEkB,gBAAiBY,KAAKZ,gBACtBH,iBAAiB,mBAIrB,cAAC,EAAD,CAAUL,SAAUqB,W,GArCVK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.68dbde41.chunk.js","sourcesContent":["import \"./card.styles.scss\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n      <h1 key={props.monster.id}>{props.monster.name}</h1>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import \"./card-list.styles.scss\";\r\nimport \"../card/card.component\";\r\nimport { Card } from \"../card/card.component\";\r\nexport const CardList = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card monster={monster}></Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import \"./search-box.styles.scss\";\r\nexport const SearchBox = (props) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"search\"\r\n        placeholder={props.placeholderValue}\r\n        onChange={(e) => {\r\n            props.handleOnChangle(e.target.value);\r\n        }}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    //this can solved with lexical scoping that is using arrow function\n    //this.handleOnChangle = this.handleOnChangle.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  handleOnChangle = (value) => {\n    this.setState({ searchField: value });\n  };\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonster = monsters.filter((monster) => {\n      return monster.name\n        .toLowerCase()\n        .includes(searchField.toLocaleLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1 className=\"PageTittle\">Monster Rolodex</h1>\n      \n        \n          <SearchBox\n            handleOnChangle={this.handleOnChangle}\n            placeholderValue=\"search monster\"\n          ></SearchBox>\n  \n\n        <CardList monsters={filterMonster}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}